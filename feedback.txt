Hallo Team 5,

Onderstaand is mijn feedback:

* Je mag steeds de complete projectfolder (met alle diagrammen) uploaden,
en daarbij even aangeven wat er geupdate of nieuw is.

* Png's van de diagrammen, yes. Pdf's met bladzijdes met halve-diagrammen zijn niet leesbaar.

* Zorg ieder dat je bij blijft, en na een les tenminste iets maakt uit die les
(desnoods een oefenopdracht) en zo veel mogelijk backlog van de lasergame.
  Afgelopen week lijkt er veel te weinig te zijn gewerkt aan CSM.

AD spel:
* wachten op end game timer activity wordt al geimpliceerd door de zandloper.
* als een persoon geraakt is, misschien ook iets van geluid, weergave, cool-down tijd?
* player dead is misschien iets waar iets mee moet? weergeven? andere usecases laten weten?
* activity diagrammen van top-level usecases zijn in principe altijd cyclisch (eindigen niet).

AD IR verzenden:
* Ik denk dat jullie bedoelen: de AD "schieten" oid.
* de transmitter maakt deel uit van je systeem/ schakeling. Hoeft niet apart.
* activity diagrammen van top-level usecases zijn in principe altijd cyclisch (eindigen niet).

AD Spelinstellingen:
* na het zenden van de game data laat de ontvanger denk ik met een geluidje oid weten 
  of de data succesvol is overgekomen. Stel nu dat het mislukt is, dan wil je denk ik de data nog eens kunnen sturen.
* activity diagrammen van top-level usecases zijn in principe altijd cyclisch (eindigen niet).
  
AD IR ontvangen:
* Er kunnen denk ik meerdere signalen worden ontvangen. Ook tbv game instellen.
  Het is denk ik een goed idee om uit te zoeken wat het ontvangen betekent en daarop
  te reageren, bijvoorbeeld door het versturen van het bericht "person got hit" waar
  een andere usecase van jullie op wacht.

Succes! Marius
Marius Versteegen , 28 sep 2022 op 17:16
Best Team5,

Onderstaand vind je mijn feedback:

UC spel instellen:
* Postconditie: is niet iets wat daarna moet gebeuren, maar een toestand van het systeem.
  Deze kan weg.
* Het verschil tussen opslaan en "opslaan & nog meer instellingen" is me niet duidelijk uit de tekst.
* Uitzonderingen zijn NVT. Die tekst zelf kan dus ook weg.

AD IR verzenden:
* De naam zou moeten zijn: AD schieten. Het laat de stappen uit UC schieten zien.
* Hoe en waarom kun je wachten op person got hit? Voor het gedrag van je gun maakt het
  toch niet uit of je een ander hebt geraakt?
* Maak AD's voor alle top-level usecases cyclisch: ze staan voor een taak die niet  
  wordt gerecreerd. (dus ook geen eind-node)

AD spel:
* Maak AD's voor alle top-level usecases cyclisch: ze staan voor een taak die niet  
  wordt gerecreerd. (dus ook geen eind-node)
* person got hit klinkt alsof het ook andere personen kunnen zijn. Misschien hit detected oid?

AD SpelInstellingen:
* Goede naam voor usecases (en dus ADs): werkwoordelijk. Dus niet spelinstellingen maar spel instellen, etc.
* Maak AD's voor alle top-level usecases cyclisch: ze staan voor een taak die niet  
  wordt gerecreerd. (dus ook geen eind-node)

AD IR ontvangen:
* Je bedoelt hier denk ik AD hitDetection oid.
* Receive signal is dan een bericht dat binnenkomt van IR ontvangen.
* Maak AD's voor alle top-level usecases cyclisch: ze staan voor een taak die niet  
  wordt gerecreerd. (dus ook geen eind-node)
  
OM:
* GetReceiverData (een getter) gebruik je typisch om even snel iets op te vragen.
  Hier zegt IR Receiver tegen IR Receiver controller iets anders, zoals: ByteReceived(byte).
* Ik begrijp de naam ConvertByte niet.
* Een entity mag ook instantane additionele functionaliteit hebben
  (zoals iets in een array stoppen). Daar is geen aparte controller voor nodig.
* Waarom vraagt de internal storecontroller getScore aan de guncontroller
  NB: bij een get functie stroomt de data de andere kant op dan de pijl.
* setState is een nodeloos generieke naam. (en dus nodeloos onduidelijk hoe het werkt)
  playShotSound, playConfirmationSound, etc 

Klassediagram:
* In het klassediagram horen er geen berichten meer langs de pijlen te staan.
  Die schuiven naar het uiteinde van de pijl. Het is nog niet klaar, zo te zien.
  Alleen nog halverwege de eerste stap van ojbectmodel naar klassediagram.
* Ik zie in IR receiver getReceiverData staan, maar er is geen pijl naar IR receiver,
  dus niemand kan die functie aanroepen. daar klopt iets niet.
  
NB: Alle tijd die je nu werkt aan de lasergame is meteen ook gratis training voor het tentamen 
en dus dubbel nuttig besteed.

Succes! Marius
Marius Versteegen , 5 okt 2022 op 12:01
Hi Marius,

We hadden een vraagje over onze USD en OBJ. Is het mogelijk hierop feedback te krijgen zodat we het kunnen verbeteren en verder werken.
Brendan Endenburg , 11 okt 2022 op 15:06
Hallo Team 5,

Onderstaand vind je mijn feedback:

UC Spel
* beter werkwoordelijke naam
* postconditie is triviaal, kan zo weg
* Met punt 1 bedoel je denk ik dat je wacht op het binnenkomen van 
  countdown en speltijd van de spelleider?
  
UC Schieten
* Preconditie geldt niet voor de gun - kan weg
* Verzend ir signaal met daarin de volgende getallen:... en ...
* Ontvangst door andere speler is irrelevant voor het gedrag van deze gun.
  kan dus eruit.

UC Geraakt
* Eigenlijk wacht je op een IR bericht dat overeenkomt met een schot van een andere speler, toch?

UC ontvangen IR
* wat hier allemaal staat, dat hoort toch bij "gebruiker geraakt" (vorige usecase).

UC spel instellen
* oke

UC invoeren van nummers
* post conditie - klop die taalkundig?
* drukt op toetsen is wat vaag.. welke toetsen? hoe werkt het?

OD 
* let op de pijlrichtingen. bedenk wat de objecten tegen elkaar zeggen.
  Ik zie nu de IR receiver controller (hoort met ei) zeggen tegen guncontroller:
  "Converteer jij even een byte, met dit nummer"
  Dat klinkt niet logisch.
* sendData klinkt vaag. welke data?
  Vraagt internal storage een array op bij guncontroller?
* Zijn er meerdere triggers? vandaar de triggerID?
* de guncontroller zegt "setstate" tegen de speaker controller.
  Beheert de speakercontroller soms de state van het spel?
* Dit OM dekt alleen nog de UC schieten.

Succes, Marius